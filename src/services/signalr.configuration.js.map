{"version":3,"file":"signalr.configuration.js","sourceRoot":"","sources":["../../../src/services/signalr.configuration.ts"],"names":[],"mappings":";;;;AACA,OAAO,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAG1E,OAAO,EAAE,QAAQ,EAA0B,MAAM,iBAAiB,CAAC;AAEnE,MAAM,OAAO,oBAAoB;IAsC/B;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,IAAI,CAAC;QAC3C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;IACpC,CAAC;CACF;;;;;;IAjDC,mCAAmB;;;;;IAGnB,kCAAgB;;;;;IAGhB,uCAAuB;;;;;IAGvB,uCAAyB;;;;;IAGzB,qCAAsB;;;;;IAGtB,+CAAgC;;;;;IAGhC,4CAA6B;;;;;IAG7B,yCAA8D;;;;;IAG9D,mDAAqC;;;;;IAGrC,mDAAqC;;;;;IAGrC,yDAA2C;;;;;IAG3C,qDAAsD","sourcesContent":["\r\nimport { ConnectionTransports } from './connection/connection.transports';\r\nimport { ConnectionTransport } from './connection/connection.transport';\r\nimport { IConnectionOptions } from './connection/connection.options';\r\nimport { LogLevel, IHttpConnectionOptions } from '@aspnet/signalr';\r\n\r\nexport class SignalRConfiguration implements IConnectionOptions {\r\n\r\n  /** connection url to the SignalR service */\r\n  public url: string;\r\n\r\n  /** Allows you to specify query string parameters object when the client connects */\r\n  public qs?: any;\r\n\r\n  /** name of the SignalR service hub to connect to */\r\n  public hubName: string;\r\n\r\n  /** Level of details for logging. Defaults to Error */\r\n  public logging: LogLevel;\r\n\r\n  /** Allows jsonp. This flag can be used to suppport CORS on older browsers */\r\n  public jsonp: boolean;\r\n\r\n  /** Allows withCredentials. This flag can be used to suppport CORS */\r\n  public withCredentials: boolean;\r\n\r\n  /** Allows pingInterval */\r\n  public pingInterval?: number;\r\n\r\n  /** Allows you to specify transport. You can specify a fallback order if you wan't to try specific transports in order. By default selects best avaliable transport. */\r\n  public transport: ConnectionTransport | ConnectionTransport[];\r\n\r\n  /** Allows you to run the event callback outside ngZone */\r\n  public executeEventsInZone?: boolean;\r\n\r\n  /** Allows you to run the errors callback outside ngZone */\r\n  public executeErrorsInZone?: boolean;\r\n\r\n  /** Allows you to run the status change in callback outside ngZone */\r\n  public executeStatusChangeInZone?: boolean;\r\n\r\n  /** Allows you to pass extra options to the connection builder, for example passing in an accessTokenFactory */\r\n  public httpConnectionOptions?: IHttpConnectionOptions;\r\n\r\n  constructor() {\r\n    this.hubName = null;\r\n    this.logging = LogLevel.Error;\r\n    this.qs = null;\r\n    this.url = null;\r\n    this.jsonp = false;\r\n    this.withCredentials = false;\r\n    this.transport = ConnectionTransports.auto;\r\n    this.executeEventsInZone = true;\r\n    this.executeErrorsInZone = false;\r\n    this.executeStatusChangeInZone = true;\r\n    this.pingInterval = 300000;\r\n    this.httpConnectionOptions = null;\r\n  }\r\n}\r\n"]}