{"version":3,"file":"i.signalr.connection.js","sourceRoot":"","sources":["../../../../src/services/connection/i.signalr.connection.ts"],"names":[],"mappings":";;;;;;;AAKA,wCASC;;;IARG,oCAA8C;;IAC9C,oCAAiC;;;;;;IACjC,wEAA2D;;;;;;IAC3D,8DAAqD;;;;;;IACrD,iEAA0D;;;;;IAC1D,oEAA8D;;;;IAC9D,oDAAa;;;;IACb,qDAAsB","sourcesContent":["import { Observable } from \"rxjs\";\r\nimport { SignalRConfiguration } from \"../signalr.configuration\";\r\nimport { BroadcastEventListener } from \"../eventing/broadcast.event.listener\";\r\nimport { ConnectionStatus } from \"./connection.status\";\r\n\r\nexport interface ISignalRConnection {\r\n    readonly status: Observable<ConnectionStatus>;\r\n    readonly errors: Observable<any>;\r\n    invoke(method: string, ...parameters: any[]): Promise<any>;\r\n    listen<T>(listener: BroadcastEventListener<T>): void;\r\n    listenFor<T>(listener: string): BroadcastEventListener<T>;\r\n    listenForRaw(listener: string): BroadcastEventListener<any[]>;\r\n    stop(): void;\r\n    start(): Promise<any>;\r\n}\r\n"]}