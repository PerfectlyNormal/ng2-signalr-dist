{"version":3,"file":"signalr.js","sourceRoot":"","sources":["../../../src/services/signalr.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgZone, Injectable } from '@angular/core';\r\nimport { HubConnectionBuilder } from '@aspnet/signalr';\r\n\r\nimport { ISignalRConnection } from './connection/i.signalr.connection';\r\nimport { SignalRConfiguration } from './signalr.configuration';\r\nimport { SignalRConnection } from './connection/signalr.connection';\r\nimport { IConnectionOptions } from './connection/connection.options';\r\n\r\n@Injectable()\r\nexport class SignalR {\r\n    private _configuration: SignalRConfiguration;\r\n    private _zone: NgZone;\r\n\r\n    public constructor(\r\n        configuration: SignalRConfiguration,\r\n        zone: NgZone\r\n    ) {\r\n        this._configuration = configuration;\r\n        this._zone = zone;\r\n    }\r\n\r\n    public createConnection(options?: IConnectionOptions): SignalRConnection {\r\n        const configuration = this.merge(options ? options : {});\r\n\r\n        this.logConfiguration(configuration);\r\n\r\n        // create connection object\r\n        const jConnection = new HubConnectionBuilder()\r\n            .withUrl(configuration.url, configuration.httpConnectionOptions)\r\n            .configureLogging(configuration.logging)\r\n            .build();\r\n        // FIXME: jConnection.qs = configuration.qs;\r\n\r\n        // !!! important. We need to register at least one function otherwise server callbacks will not work.\r\n        jConnection.on('noOp', () => { /* */ });\r\n\r\n        return new SignalRConnection(jConnection, this._zone, configuration);\r\n    }\r\n\r\n    public connect(options?: IConnectionOptions): Promise<ISignalRConnection> {\r\n        return this.createConnection(options).start();\r\n    }\r\n\r\n    private logConfiguration(configuration: SignalRConfiguration) {\r\n        try {\r\n            const serializedQs = JSON.stringify(configuration.qs);\r\n            const serializedTransport = JSON.stringify(configuration.transport);\r\n            if (configuration.logging) {\r\n                console.log(`Creating connecting with...`);\r\n                console.log(`configuration:[url: '${configuration.url}'] ...`);\r\n                console.log(`configuration:[hubName: '${configuration.hubName}'] ...`);\r\n                console.log(`configuration:[qs: '${serializedQs}'] ...`);\r\n                console.log(`configuration:[transport: '${serializedTransport}'] ...`);\r\n            }\r\n        } catch (err) { /* */ }\r\n    }\r\n\r\n    private merge(overrides: IConnectionOptions): SignalRConfiguration {\r\n        const merged: SignalRConfiguration = new SignalRConfiguration();\r\n        merged.hubName = overrides.hubName || this._configuration.hubName;\r\n        merged.url = overrides.url || this._configuration.url;\r\n        merged.httpConnectionOptions = overrides.httpConnectionOptions || this._configuration.httpConnectionOptions;\r\n        merged.qs = overrides.qs || this._configuration.qs;\r\n        merged.logging = this._configuration.logging;\r\n        merged.jsonp = overrides.jsonp || this._configuration.jsonp;\r\n        merged.withCredentials = overrides.withCredentials || this._configuration.withCredentials;\r\n        merged.transport = overrides.transport || this._configuration.transport;\r\n        merged.executeEventsInZone = overrides.executeEventsInZone || this._configuration.executeEventsInZone;\r\n        merged.executeErrorsInZone = overrides.executeErrorsInZone || this._configuration.executeErrorsInZone;\r\n        merged.executeStatusChangeInZone = overrides.executeStatusChangeInZone || this._configuration.executeStatusChangeInZone;\r\n        merged.pingInterval = overrides.pingInterval || this._configuration.pingInterval;\r\n        return merged;\r\n    }\r\n\r\n}\r\n"]}